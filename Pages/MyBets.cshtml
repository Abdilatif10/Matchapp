@page
@using SimpleApp.Models
@model MyBetsModel
@{
    ViewData["Title"] = "Mina Bets";
}

<div class="bets-container">
    <h2 class="page-title">Dina Lagda Bets</h2>

    @if (Model.UserBets?.Any() != true)
    {
        <div class="no-bets-message">
            <i class="fas fa-ticket-alt mb-3"></i>
            <p>Du har inte lagt några bets än.</p>
            <a href="/" class="btn btn-primary">Hitta matcher att betta på</a>
        </div>
        return;
    }

    <div class="bets-section">
        <h3 class="section-title">
            <i class="fas fa-clock me-2"></i>
            Aktiva Bets
        </h3>
        <div class="bets-grid">
            @foreach (var bet in Model.UserBets.Where(b => b.Match.Status == "TIMED"))
            {
                <div class="bet-card">
                    <div class="bet-header">
                        <div class="match-time">
                            <i class="far fa-calendar-alt me-2"></i>
                            @bet.Match.UtcDate.ToString("HH:mm, MMM dd")
                        </div>
                        <div class="competition">
                            <img src="@bet.Match.Competition?.Emblem" alt="@bet.Match.Competition?.Name" />
                        </div>
                    </div>

                    <div class="teams-container">
                        <div class="team">
                            <img src="@bet.Match.HomeTeam.Crest" alt="@bet.Match.HomeTeam.Name" class="team-logo" />
                            <span class="team-name">@bet.Match.HomeTeam.Name</span>
                        </div>
                        <div class="vs">VS</div>
                        <div class="team">
                            <img src="@bet.Match.AwayTeam.Crest" alt="@bet.Match.AwayTeam.Name" class="team-logo" />
                            <span class="team-name">@bet.Match.AwayTeam.Name</span>
                        </div>
                    </div>

                    <div class="bet-details">
                        <div class="bet-info">
                            <span class="label">Insats:</span>
                            <span class="value">@bet.Bet.Amount points</span>
                        </div>
                        <div class="bet-info">
                            <span class="label">Bettyp:</span>
                            <span class="value">@GetBetTypeDisplay(bet.Bet.BetType)</span>
                        </div>
                        <div class="bet-info">
                            <span class="label">Odds:</span>
                            <span class="value">@GetOdds(bet)</span>
                        </div>
                        <div class="bet-info highlight">
                            <span class="label">Möjlig vinst:</span>
                            <span class="value win">@bet.Bet.PotentialPayout points</span>
                        </div>
                    </div>

                    <div class="bet-status pending">
                        <i class="fas fa-hourglass-half me-2"></i>
                        Planerad
                    </div>
                </div>
            }
        </div>

        <h3 class="section-title mt-5">
            <i class="fas fa-flag-checkered me-2"></i>
            Avgjorda Bets
        </h3>
        <div class="bets-grid">
            @foreach (var bet in Model.UserBets.Where(b => b.Match.Status == "FINISHED" || b.Match.Status == "POSTPONED"))
            {
                <div class="bet-card @(bet.IsWon ? "won" : "lost")">
                    <div class="bet-header">
                        <div class="match-time">
                            <i class="far fa-calendar-alt me-2"></i>
                            @bet.Match.UtcDate.ToString("HH:mm, MMM dd")
                        </div>
                        <div class="competition">
                            <img src="@bet.Match.Competition?.Emblem" alt="@bet.Match.Competition?.Name" />
                        </div>
                    </div>

                    <div class="teams-container">
                        <div class="team">
                            <img src="@bet.Match.HomeTeam.Crest" alt="@bet.Match.HomeTeam.Name" class="team-logo" />
                            <span class="team-name">@bet.Match.HomeTeam.Name</span>
                        </div>
                        <div class="vs">
                            @if (bet.Match.Score?.FullTime != null)
                            {
                                <div class="score">@bet.Match.Score.FullTime.Home - @bet.Match.Score.FullTime.Away</div>
                            }
                        </div>
                        <div class="team">
                            <img src="@bet.Match.AwayTeam.Crest" alt="@bet.Match.AwayTeam.Name" class="team-logo" />
                            <span class="team-name">@bet.Match.AwayTeam.Name</span>
                        </div>
                    </div>

                    <div class="bet-details">
                        <div class="bet-info">
                            <span class="label">Insats:</span>
                            <span class="value">@bet.Bet.Amount points</span>
                        </div>
                        <div class="bet-info">
                            <span class="label">Bettyp:</span>
                            <span class="value">@GetBetTypeDisplay(bet.Bet.BetType)</span>
                        </div>
                        <div class="bet-info">
                            <span class="label">Odds:</span>
                            <span class="value">@GetOdds(bet)</span>
                        </div>
                        <div class="bet-info highlight">
                            @if (bet.IsWon)
                            {
                                <span class="label">Vinst:</span>
                                <span class="value win">+@bet.Bet.PotentialPayout points</span>
                            }
                            else
                            {
                                <span class="label">Förlust:</span>
                                <span class="value loss">-@bet.Bet.Amount points</span>
                            }
                        </div>
                    </div>

                    @if (bet.Match.Status == "POSTPONED")
                    {
                        <div class="bet-status postponed">
                            <i class="fas fa-pause-circle me-2"></i>
                            Uppskjuten
                        </div>
                    }
                    else
                    {
                        <div class="bet-status @(bet.IsWon ? "won" : "lost")">
                            <i class="@(bet.IsWon ? "fas fa-trophy" : "fas fa-times-circle") me-2"></i>
                            @(bet.IsWon ? "Vinst" : "Förlust")
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

@functions {
    private string GetBetTypeDisplay(string betType) => betType switch
    {
        "HomeWin" => "Hemmavinst",
        "Draw" => "Oavgjort",
        "AwayWin" => "Bortavinst",
        _ => betType
    };

    private string GetOdds(BetViewModel bet)
    {
        return bet.Bet.BetType switch
        {
            "HomeWin" => bet.Bet.HomeWinOdds.ToString("F2"),
            "AwayWin" => bet.Bet.AwayWinOdds.ToString("F2"),
            _ => bet.Bet.DrawOdds.ToString("F2")
        };
    }
}

