@page
@model IndexModel
@{
    ViewData["Title"] = "Premier League Teams";
}

<div class="premier-league-container">
    <h1 class="premier-league-title">Premier League Teams</h1>
    
    <div class="search-container">
        <input type="text" id="teamSearch" class="team-search" placeholder="Search for a team to see their matches..." />
    </div>

    <div class="content-container @(string.IsNullOrEmpty(Model.SearchTerm) ? "" : "show-matches")">
        <div class="teams-grid">
            @foreach (var team in Model.Teams)
            {
                <div class="team-card @(Model.SearchTerm == team.Name ? "selected" : "")" 
                     onclick="window.location.href='?searchTerm=@team.Name&datetime=@Model.UtcDate.ToString("yyyy-MM-dd")'">
                    <img src="@team.Crest" alt="@team.Name" class="team-logo" />
                    <h3 class="team-name">@team.Name</h3>
                    <div class="team-rating @GetRatingClass(team.TeamRatingScale)">
                        Rating: @team.TeamRatingScale/10
                    </div>
                </div>
            }
        </div>

        @if (!string.IsNullOrEmpty(Model.SearchTerm))
        {
            <div class="matches-panel">
                <div class="matches-header">
                    <h2>@Model.SearchTerm Matches</h2>
                    <input type="date" id="datetime" name="datetime" value="@Model.UtcDate.ToString("yyyy-MM-dd")" 
                           class="date-picker" 
                           onchange="window.location.href='?searchTerm=@Model.SearchTerm&datetime=' + this.value" />
                </div>

                @if (Model.Matches != null && Model.Matches.Any())
                {
                    <div class="matches-list">
                        @foreach (var match in Model.Matches)
                        {
                            <div class="match-card">
                                <div class="match-teams">
                                    <div class="team">
                                        <img src="@match.HomeTeam.Crest" alt="@match.HomeTeam.Name" class="team-logo-small" />
                                        <span>@match.HomeTeam.Name</span>
                                    </div>
                                    <div class="match-time">
                                        <div class="time">@match.UtcDate.ToString("HH:mm")</div>
                                        <div class="date">@match.UtcDate.ToString("MMM dd")</div>
                                    </div>
                                    <div class="team">
                                        <img src="@match.AwayTeam.Crest" alt="@match.AwayTeam.Name" class="team-logo-small" />
                                        <span>@match.AwayTeam.Name</span>
                                    </div>
                                </div>
                                <div class="match-details">
                                    <div class="competition">
                                        <img src="@match.Competition.Emblem" alt="@match.Competition.Name" class="competition-logo" />
                                        <span>@match.Competition.Name</span>
                                    </div>
                                    <div class="odds-container">
                                        <div class="odds">
                                            <div class="odds-item">
                                                <span class="odds-label">1</span>
                                                <span class="odds-value">@match.Odds.HomeWin.ToString("F2")</span>
                                            </div>
                                            <div class="odds-item">
                                                <span class="odds-label">X</span>
                                                <span class="odds-value">@match.Odds.Draw.ToString("F2")</span>
                                            </div>
                                            <div class="odds-item">
                                                <span class="odds-label">2</span>
                                                <span class="odds-value">@match.Odds.AwayWin.ToString("F2")</span>
                                            </div>
                                        </div>  
                                    @if (User.Identity.IsAuthenticated)
                                        {
                                            <a asp-page="/PlaceBet" 
                                               asp-route-matchId="@match.Id"
                                               asp-route-datetime="@Model.UtcDate.ToString("yyyy-MM-dd")"
                                               class="bet-button">
                                                Place Bet
                                            </a>
                                        }
                                        else
                                        {
                                            <a asp-area="Identity" 
                                               asp-page="/Account/Login" 
                                               asp-route-returnUrl="@($"/PlaceBet?matchId={match.Id}&datetime={Model.UtcDate:yyyy-MM-dd}")"
                                               class="bet-button login-required">
                                                Login to Bet
                                            </a>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="no-matches">
                        <p>No matches found for @Model.SearchTerm on the selected date.</p>
                    </div>
                }
            </div>
        }
    </div>
</div>

@functions {
    private string GetRatingClass(int rating)
    {
        return rating switch
        {
            >= 9 => "rating-high",
            >= 7 => "rating-medium",
            >= 5 => "rating-average",
            _ => "rating-low"
        };
    }
}



@section Scripts {
    <script>
        document.getElementById('teamSearch').addEventListener('input', function(e) {
            const searchText = e.target.value.toLowerCase();
            const teamCards = document.querySelectorAll('.team-card');
            
            teamCards.forEach(card => {
                const teamName = card.querySelector('.team-name').textContent.toLowerCase();
                card.style.display = teamName.includes(searchText) ? 'block' : 'none';
            });
        });
    </script>
}
